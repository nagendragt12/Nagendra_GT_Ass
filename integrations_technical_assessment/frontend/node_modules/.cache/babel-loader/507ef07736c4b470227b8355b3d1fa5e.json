{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manju\\\\Downloads\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\airtable.js\";\n// airtable.js\n\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nexport const AirtableIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/airtable/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'Airtable Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/airtable/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Airtable'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected((integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) ? true : false);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Parameters\", /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: isConnected ? () => {} : handleConnectClick,\n    color: isConnected ? 'success' : 'primary',\n    disabled: isConnecting,\n    style: {\n      pointerEvents: isConnected ? 'none' : 'auto',\n      cursor: isConnected ? 'default' : 'pointer',\n      opacity: isConnected ? 1 : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, isConnected ? 'Airtable Connected' : isConnecting ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 74\n    }\n  }) : 'Connect to Airtable'))));\n};","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","AirtableIntegration","user","org","integrationParams","setIntegrationParams","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","React","createElement","Fragment","sx","mt","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size"],"sources":["C:/Users/Manju/Downloads/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/airtable.js"],"sourcesContent":["// airtable.js\n\nimport { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    CircularProgress\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const AirtableIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // Function to open OAuth in a new window\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/airtable/authorize`, formData);\n            const authURL = response?.data;\n\n            const newWindow = window.open(authURL, 'Airtable Authorization', 'width=600, height=600');\n\n            // Polling for the window to close\n            const pollTimer = window.setInterval(() => {\n                if (newWindow?.closed !== false) { \n                    window.clearInterval(pollTimer);\n                    handleWindowClosed();\n                }\n            }, 200);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    // Function to handle logic when the OAuth window closes\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/airtable/credentials`, formData);\n            const credentials = response.data; \n            if (credentials) {\n                setIsConnecting(false);\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'Airtable' }));\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    useEffect(() => {\n        setIsConnected(integrationParams?.credentials ? true : false)\n    }, []);\n\n    return (\n        <>\n        <Box sx={{mt: 2}}>\n            Parameters\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{mt: 2}}>\n                <Button \n                    variant='contained' \n                    onClick={isConnected ? () => {} :handleConnectClick}\n                    color={isConnected ? 'success' : 'primary'}\n                    disabled={isConnecting}\n                    style={{\n                        pointerEvents: isConnected ? 'none' : 'auto',\n                        cursor: isConnected ? 'default' : 'pointer',\n                        opacity: isConnected ? 1 : undefined\n                    }}\n                >\n                    {isConnected ? 'Airtable Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to Airtable'}\n                </Button>\n            </Box>\n        </Box>\n      </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}