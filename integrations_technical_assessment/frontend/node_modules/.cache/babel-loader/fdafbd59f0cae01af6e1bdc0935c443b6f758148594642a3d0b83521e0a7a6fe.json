{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manju\\\\Downloads\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\n\n// HubSpot API URLs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(HUBSPOT_AUTH_URL, formData);\n      const authURL = response.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const response = await axios.get(HUBSPOT_ITEMS_URL, {\n        params: {\n          user_id: user,\n          org_id: org\n        }\n      });\n      const items = response.data;\n      if (items) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          items: items,\n          type: 'HubSpot'\n        }));\n        console.log(\"Retrieved HubSpot Items:\", items); // Print items to console\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(!!(integrationParams !== null && integrationParams !== void 0 && integrationParams.items));\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"HubSpot Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? () => {} : handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? 'HubSpot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 73\n        }, this) : 'Connect to HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["axios","useState","useEffect","Box","Button","CircularProgress","jsxDEV","_jsxDEV","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","HUBSPOT_AUTH_URL","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","get","HUBSPOT_ITEMS_URL","params","user_id","org_id","items","prev","type","console","log","_e$response2","_e$response2$data","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","_c","$RefreshReg$"],"sources":["C:/Users/Manju/Downloads/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Box, Button, CircularProgress } from '@mui/material';\r\n\r\n// HubSpot API URLs\r\n\r\n\r\n\r\n\r\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    // Function to open OAuth in a new window\r\n    const handleConnectClick = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            const response = await axios.post(HUBSPOT_AUTH_URL, formData);\r\n            const authURL = response.data;\r\n\r\n            const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\r\n\r\n            // Polling for the window to close\r\n            const pollTimer = window.setInterval(() => {\r\n                if (newWindow?.closed !== false) { \r\n                    window.clearInterval(pollTimer);\r\n                    handleWindowClosed();\r\n                }\r\n            }, 200);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail);\r\n        }\r\n    };\r\n\r\n    // Function to handle logic when the OAuth window closes\r\n    const handleWindowClosed = async () => {\r\n        try {\r\n            const response = await axios.get(HUBSPOT_ITEMS_URL, {\r\n                params: {\r\n                    user_id: user,\r\n                    org_id: org,\r\n                }\r\n            });\r\n            const items = response.data; \r\n            if (items) {\r\n                setIsConnecting(false);\r\n                setIsConnected(true);\r\n                setIntegrationParams(prev => ({ ...prev, items: items, type: 'HubSpot' }));\r\n                console.log(\"Retrieved HubSpot Items:\", items); // Print items to console\r\n            }\r\n            setIsConnecting(false);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsConnected(!!integrationParams?.items);\r\n    }, [integrationParams]);\r\n\r\n    return (\r\n        <Box sx={{ mt: 2 }}>\r\n            <h2>HubSpot Integration</h2>\r\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\r\n                <Button \r\n                    variant='contained' \r\n                    onClick={isConnected ? () => {} : handleConnectClick}\r\n                    color={isConnected ? 'success' : 'primary'}\r\n                    disabled={isConnecting}\r\n                    style={{\r\n                        pointerEvents: isConnected ? 'none' : 'auto',\r\n                        cursor: isConnected ? 'default' : 'pointer',\r\n                        opacity: isConnected ? 1 : undefined\r\n                    }}\r\n                >\r\n                    {isConnected ? 'HubSpot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}